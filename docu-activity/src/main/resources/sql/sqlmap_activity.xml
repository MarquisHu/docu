<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.docu.activity.dao.ActivityDao">
    
    <resultMap id="ACTIVITY_RESULT_MAP" type="ActivityResult">
		<result property="activityId" column="ACTIVITY_ID" />
		<result property="expenseAmount" column="EXPENSE_AMOUNT" />
		<result property="remark" column="REMARK" />
		<result property="location" column="LOCATION" />
		<result property="activityTime" column="ACTIVITY_TIME" />
		<result property="percent" column="PERCENT" />
		<result property="updateBy" column="UPDATE_BY" />
		<result property="updateTime" column="UPDATE_TIME" />
	</resultMap>
	
	<sql id="ACTIVITY_DO_QUERY_COLUMNS">
		A1.ACTIVITY_ID 		activityId, 
		A1.EXPENSE_AMOUNT 	expenseAmount, 
		A1.REMARK 			remark,
		A1.LOCATION 		location,
		date_format(A1.ACTIVITY_TIME, '%Y-%m-%d %h:%i:%s') activityTime,
		A1.PERCENT 			percent,
		A1.UPDATE_BY 		updateBy,
		date_format(A1.UPDATE_TIME, '%Y-%m-%d %h:%i:%s') updateTime
	</sql>

	<sql id="ACTIVITY_DO_QUERY_PARAMS">
		<where>
			<if test="activityId != null">ACTIVITY_ID = #{activityId,jdbcType=BIGINT}</if>
			<if test="expenseAmount != null">AND EXPENSE_AMOUNT = #{expenseAmount,jdbcType=VARCHAR}</if>
			<if test="remark != null">AND REMARK = #{remark,jdbcType=VARCHAR}</if>
			<if test="location != null">AND LOCATION = #{location,jdbcType=VARCHAR}</if>
			<if test="activityTime != null">AND ACTIVITY_TIME = #{activityTime,jdbcType=VARCHAR}</if>
			<if test="updateBy != null">AND UPDATE_BY = #{updateBy,jdbcType=VARCHAR}</if>
		</where>
	</sql>
	
    <insert id="insertActivity" parameterType="Activity">
		INSERT INTO DOCU_ERP_ACTIVITY(
			ACTIVITY_ID,
			EXPENSE_AMOUNT, 
			REMARK, 
			LOCATION, 
			ACTIVITY_TIME, 
			PERCENT,
			UPDATE_BY,
			UPDATE_TIME
		) VALUES (
			#{activityId,jdbcType=BIGINT},
		 	#{expenseAmount,jdbcType=FLOAT},
		 	#{remark,jdbcType=VARCHAR},
		 	#{location,jdbcType=VARCHAR},
		 	#{activityTime,jdbcType=VARCHAR},
		 	#{percent,jdbcType=INTEGER},
		 	#{updateBy,jdbcType=VARCHAR},
		 	#{updateTime,jdbcType=VARCHAR}
		)
	</insert>
	
    <update id="updateActivity" parameterType="Activity">
	    <![CDATA[
			UPDATE DOCU_ERP_ACTIVITY
		]]>
		<set>
			<if test="expenseAmount != null">
			    <![CDATA[
			    	EXPENSE_AMOUNT = #{expenseAmount,jdbcType=FLOAT},
				]]>
			</if>
			<if test="remark != null">
			    <![CDATA[
			    	REMARK = #{remark,jdbcType=VARCHAR},
				]]>
			</if>
			<if test="location != null">
			    <![CDATA[
			    	LOCATION = #{location,jdbcType=VARCHAR},
				]]>
			</if>
			<if test="activityTime != null">
			    <![CDATA[
			    	ACTIVITY_TIME = #{activityTime,jdbcType=VARCHAR},
				]]>
			</if>
			<if test="percent != null">
			    <![CDATA[
			    	PERCENT = #{percent,jdbcType=INTEGER},
				]]>
			</if>
			<if test="updateBy != null">
			    <![CDATA[
			    	UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
				]]>
			</if>
			<if test="updateTime != null">
			    <![CDATA[
			    	UPDATE_TIME = #{updateTime,jdbcType=VARCHAR}
				]]>
			</if>
		</set>
		WHERE ACTIVITY_ID = #{activityId,jdbcType=BIGINT}
	</update>
	
    <delete id="deleteActivity" parameterType="String">
        <![CDATA[
			DELETE FROM DOCU_ERP_ACTIVITY WHERE ACTIVITY_ID = #{activityId,jdbcType=VARCHAR}
		]]>
    </delete>
	
    <select id="findActivity" parameterType="Long" resultMap="ACTIVITY_RESULT_MAP">
		SELECT
		<include refid="ACTIVITY_DO_QUERY_COLUMNS" />
	    <![CDATA[  
	     FROM DOCU_ERP_ACTIVITY A1 WHERE A1.ACTIVITY_ID = #{activityId,jdbcType=BIGINT}
	    ]]>
	</select>
	
    <select id="queryActivityTotal" parameterType="com.docu.components.common.QueryBase" resultType="int">
	    SELECT
		COUNT(*)
		<![CDATA[  
	     	FROM DOCU_ERP_ACTIVITY A1
	    ]]>
	    <where>
			<if test="entity.activityId != null &amp;&amp; entity.activityId != 0">
			    <![CDATA[
			    	AND ACTIVITY_ID = #{entity.activityId,jdbcType=BIGINT}
				]]>
			</if>
			<choose>
				<when test="entity.startDate != null &amp;&amp; entity.endDate != null">
				    <![CDATA[
						and DATE_FORMAT(A1.ACTIVITY_TIME, '%Y-%m-%d') between DATE_FORMAT(#{entity.startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
						and DATE_FORMAT(#{entity.endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
					]]>
				</when>
				<otherwise>
				    <if test="entity.startDate != null">
					    <![CDATA[
					    	and DATE_FORMAT(A1.ACTIVITY_TIME, '%Y-%m-%d') >= DATE_FORMAT(#{entity.startDate,jdbcType=VARCHAR}, '%Y-%m-%d')
					    ]]>
				    </if>
				    <if test="entity.endDate != null">
					    <![CDATA[
					    	and DATE_FORMAT(A1.ACTIVITY_TIME, '%Y-%m-%d') <= DATE_FORMAT(#{entity.endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
					    ]]>
				    </if>
				</otherwise>
			</choose>
		</where>
	</select>
	
	<select id="queryActivity" parameterType="com.docu.components.common.QueryBase" resultMap="ACTIVITY_RESULT_MAP">
	    SELECT
		<include refid="ACTIVITY_DO_QUERY_COLUMNS" />
		<![CDATA[  
	     	FROM DOCU_ERP_ACTIVITY A1
	    ]]>
	    <where>
			<if test="entity.activityId != null &amp;&amp; entity.activityId != 0">
			    <![CDATA[
			    	AND ACTIVITY_ID = #{entity.activityId,jdbcType=BIGINT}
				]]>
			</if>
			<choose>
				<when test="entity.startDate != null &amp;&amp; entity.endDate != null">
				    <![CDATA[
						and DATE_FORMAT(A1.ACTIVITY_TIME, '%Y-%m-%d') between DATE_FORMAT(#{entity.startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
						and DATE_FORMAT(#{entity.endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
					]]>
				</when>
				<otherwise>
				    <if test="entity.startDate != null">
					    <![CDATA[
					    	and DATE_FORMAT(A1.ACTIVITY_TIME, '%Y-%m-%d') >= DATE_FORMAT(#{entity.startDate,jdbcType=VARCHAR}, '%Y-%m-%d')
					    ]]>
				    </if>
				    <if test="entity.endDate != null">
					    <![CDATA[
					    	and DATE_FORMAT(A1.ACTIVITY_TIME, '%Y-%m-%d') <= DATE_FORMAT(#{entity.endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
					    ]]>
				    </if>
				</otherwise>
			</choose>
		</where>
		ORDER BY A1.ACTIVITY_TIME DESC 
		LIMIT #{preEndNum}, #{pageSize}
	</select>
	
	<select id="getSequenceUuid" parameterType="String" resultType="long">
		SELECT NEXTVAL(#{sequenceName,jdbcType=VARCHAR}) AS NEXT_SEQUENCE;
	</select>
</mapper>